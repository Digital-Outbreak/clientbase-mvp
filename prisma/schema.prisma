generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

enum OwnerRole {
  NOAGENCY
  AGENCY
}

enum TeamMemberRole {
  ADMIN
  MEMBER
}

model TeamMember {
  id       String         @id @default(cuid())
  clerkId  String
  email    String
  name     String
  teamRole TeamMemberRole @default(MEMBER)

  ownerId String
  owner   Owner  @relation(fields: [ownerId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  @@unique([email, ownerId])
}

model Owner {
  id       String         @id @default(cuid())
  clerkId  String
  email    String
  name     String
  teamRole TeamMemberRole @default(ADMIN)

  // agency
  companyName    String
  companySlug    String?      @unique
  imageUrl       String
  companyIconUrl String
  role           OwnerRole    @default(NOAGENCY)
  teamMembers    TeamMember[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Client    Client[]
}

model Client {
  id            String       @id @default(cuid())
  ownerId       String
  name          String
  email         String
  loom          String
  password      String
  clientCompany String
  clientSlug    String?      @unique
  companyName   String
  pfpUrl        String
  bannerUrl     String
  files         FormData[]
  links         String[]
  KanbanCard    KanbanCard[]
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt

  owner Owner @relation(fields: [ownerId], references: [id])
}

model FormData {
  id        String   @id @default(cuid())
  name      String
  url       String
  createdAt DateTime @default(now())

  clientId String?
  Client   Client? @relation(fields: [clientId], references: [id])
}

enum lanes {
  Backlog
  Todo
  InProgress
  Done
}

model KanbanCard {
  id        String   @id @default(cuid())
  ownerId   String
  title     String
  dueDate   DateTime
  lane      lanes    @default(Backlog)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  clientId String?
  Client   Client? @relation(fields: [clientId], references: [id])
}
